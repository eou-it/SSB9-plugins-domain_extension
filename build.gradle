buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
    }
}

version "9.32"
group "domain.extension"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }

    if (System.properties['PROXY_SERVER_NAME']) {
        maven {url "${System.properties['PROXY_SERVER_NAME']}"}
    }

    maven { url "https://code.lds.org/nexus/content/groups/main-repo" }
    maven { url "http://repository.jboss.org/maven2/" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-web-testing-support"
    //added for Grails 3 migration
    compile "oro:oro:2.0.8"
    //Added for Grails-3
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.17.Final"
    //compile "javax.persistence:persistence-api:1.0.2"
    compile files("lib/lib/javax.persistence.jar")
    compile files("bannerTransform.jar")

    //compile file("build/classes/main/net/hedtech/banner/transformation/ast")

}

configurations {
    runtime.exclude group: "org.grails", module: "grails-gorm-testing-support"
    runtime.exclude group: "org.springframework.boot", module: "spring-boot-starter-actuator"
    //all*.exclude module : 'spring-boot-starter-logging'

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
}



assets {
    packagePlugin = true
}

//TODO - Create custom command, Compile the files on Demand
classes {
    doLast {
         if (new File("build/classes/groovy/main").exists()) {
            println("===In generating AST JAR Dir Path==")
            def filePath = "build/libs/bannerTransform.jar"
            def tmpDir = "build/temp"
            def file = new File(filePath)
            if (file.exists()) {
                ant.delete(dir: file)
            }
            ant.copy(todir: tmpDir) {
                fileset(dir: "build/classes/groovy/main")
            }
            ant.copy(todir: "${tmpDir}/META-INF/services") {
                fileset(dir: "grails-app/conf/services")
            }
            ant.jar(destfile: "${filePath}", basedir: tmpDir)
            println "Global AST jar file: build/libs/bannerTransform.jar"
        }
    }
}
